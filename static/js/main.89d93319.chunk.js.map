{"version":3,"sources":["searchPages/StateProvider.js","reducer/index.js","actions/type.js","searchPages/Search.js","homepage/Home.js","searchPages/useGoogleSearch.js","searchPages/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","title","src","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","alt","searchInformation","formattedTotalResults","formattedSearchTime","searchTime","items","map","item","key","id","href","link","pagemap","cse_image","length","displayLink","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.89d93319.chunk.js","sourcesContent":["import React , {createContext, useContext, useReducer} from 'react'\r\n\r\n\r\n//preparing the data layer\r\nexport const StateContext = createContext();\r\n\r\nexport const  StateProvider = ({ reducer, initialState, children })=>(\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\n//hooks which allow us to pull information from the data layer\r\n\r\nexport const useStateValue =()=>useContext(StateContext);\r\n","import {SET_SEARCH_TERM} from '../actions/type';\r\n\r\nexport const initialState={\r\n    term:null,\r\n}\r\n\r\nconst reducer = (state={}, action)=>{\r\n    \r\n        console.log(action);\r\n\r\n        switch(action.type){\r\n            case SET_SEARCH_TERM:\r\n                return{\r\n                    ...state,\r\n                    term:action.term,\r\n                };\r\n\r\n            default:\r\n                return state;\r\n            }\r\n        }\r\nexport default reducer;","export const initialState='initialState';\r\n\r\nexport const SET_SEARCH_TERM = \"SET_SEARCH_TERM\";\r\n\r\n","import React, {useState} from 'react';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport './Search.css'\r\nimport { Button } from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useStateValue} from './StateProvider';\r\nimport reducer from '../reducer';\r\n\r\n\r\nimport {SET_SEARCH_TERM} from '../actions/type'; \r\nfunction Search({hideButtons = false}) {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n\r\n    const [input, setInput] = useState();\r\n    const history= useHistory();\r\n\r\n    const search=(e)=>{\r\n            e.preventDefault();\r\n            console.log('enter pressed',input);\r\n           \r\n            dispatch({\r\n                type:'SET_SEARCH_TERM',\r\n                term: input\r\n            })\r\n            history.push('/search');\r\n    }\r\n  return (\r\n    <form className=\"search\" >\r\n        <div className=\"search__input\">\r\n            <SearchIcon className=\"search__inputIcon\" />\r\n            <input  onChange={e=>setInput(e.target.value)} />\r\n            <MicIcon/>\r\n        </div>\r\n    {!hideButtons ? (\r\n\r\n        <div className=\"search__buttons\">\r\n            <Button type=\"submit\" onClick={search} variant=\"outlined\">Google Search</Button>\r\n            <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n            \r\n        </div>\r\n    ):(\r\n        <div className=\"search__buttons\">\r\n            <Button type=\"submit\" className='search__buttonsHidden' onClick={search} variant=\"outlined\">Google Search</Button>\r\n            <Button className='search__buttonsHidden' variant=\"outlined\">I'm Feeling Lucky</Button>\r\n            \r\n        </div>\r\n    )\r\n    }\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;","import React,{useState} from 'react';\r\nimport './Home.css';\r\nimport {Link} from 'react-router-dom';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport {Avatar} from '@material-ui/core';\r\nimport Search from '../searchPages/Search';\r\nfunction Home() {\r\n\r\n  return(\r\n    <>\r\n      <div  className=\"home\">\r\n        <div className=\"home__header\">\r\n            <div className=\"home__headerLeft\">\r\n                <Link to='/search'>Store</Link>\r\n                <Link to='/about'>About</Link>\r\n                </div>\r\n\r\n                <div className=\"home__headerRight\">\r\n                <Link to='/gmail'>Gmail</Link>\r\n                <Link to='/images'>Images</Link>\r\n                <AppsIcon />\r\n                <Avatar />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"home__body\">\r\n                <img title=\"image-google\" src={'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'} />\r\n\r\n\r\n\r\n          <div className=\"home__inputContainer\">\r\n                <Search  />\r\n        \r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nexport default Home;\r\n","import React,{useState,useEffect} from 'react';\r\n \r\n const CONTEXT_KEY = \"3cdae6ae0939cd4d7\"\r\n \r\n const API_KEY =\"AIzaSyC_i23Vpby-gCFc-_igHjJxybLm0-nieIc\"\r\n \r\n const useGoogleSearch=(term)=>{\r\n      const [data, setData] = useState(null);\r\n\r\n      useEffect(()=>{\r\n            const fetchData= async()=>{\r\n                fetch(\r\n                        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=3cdae6ae0939cd4d7&q=${term}`\r\n\r\n                )\r\n                .then(response=>response.json())\r\n                .then(result=>{\r\n                        setData(result)\r\n                        console.log(result);\r\n                    })\r\n            }        \r\n            fetchData();\r\n\r\n      },[term]);\r\n        return{data}\r\n  };\r\n\r\nexport default useGoogleSearch;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Search from './Search';\r\nimport './SearchPage.css';\r\nimport {useStateValue} from './StateProvider';\r\nimport useGoogleSearch from './useGoogleSearch';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\n\r\n\r\n\r\nfunction SearchPage() {\r\n    const [{term}, dispatch]=useStateValue();\r\n    const {data} = useGoogleSearch(term);\r\n\r\n    \r\n    console.log(data);\r\n\r\n  return (\r\n    <div className=\"searchPage\">\r\n        <div className=\"searchPage__header\">\r\n            <Link to=\"/\">\r\n                <img className=\"searchPage__logo\" src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\" alt=\"\" />\r\n            </Link>            \r\n\r\n        <div className=\"searchPage__headerBody\">\r\n            <Search hideButtons /> \r\n\r\n            <div className=\"searchPage__options\">\r\n                    <div className=\"searchPage__optionsLeft\">\r\n\r\n                            <div className=\"searchPage__option\">\r\n                                <SearchIcon />\r\n                                <Link to='/all'>All</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <DescriptionIcon />\r\n                                <Link to='/news'>News</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <ImageIcon />\r\n                                <Link to='/Images'>Images</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <LocalOfferIcon />\r\n                                <Link to='/shopping'>Shopping</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <RoomIcon />\r\n                                <Link to='/maps'>map</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <MoreVert />\r\n                                <Link to='/more'>more</Link>\r\n                            </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"searchPage__optionsRight\">\r\n                    <div className=\"searchPage__option\">\r\n                            \r\n                            <Link to='/settings'>Settings</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <Link to='/Tool'>Tools</Link>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    {true && (\r\n\r\n<div className=\"searchPage__results\">\r\n    \r\n    <p className=\"searchPage__resultCount\">\r\n        About {data?.searchInformation.formattedTotalResults} results\r\n        ({data?.searchInformation.formattedSearchTime} seconds {data?.searchInformation.searchTime}) for {term}   \r\n    </p>\r\n\r\n    {data?.items.map((item,key)=>(\r\n        <div id={key} key={key} className=\"searchPage__result\">\r\n\r\n            <a id={key}  href={item.link}>\r\n            \r\n           \r\n                    <a href={item.link}>\r\n                      {item.pagemap?.cse_image?.length > 0 &&item.pagemap?.cse_image[0]?.src &&(\r\n\r\n                       <img className=\"seachPage__resultImage\"\r\n                        \r\n                        src={item.pagemap?.cse_image[0]?.src}\r\n            \r\n                        alt=\"\" />\r\n                      )} \r\n                    </a>\r\n           \r\n            </a>\r\n                    {item.displayLink}\r\n\r\n            <a  id={key} className=\"searchPage__resultTitle\" href={item.link}>\r\n\r\n                <h3 className=\"searchPage__resultTitle\" id={key}>\r\n                    {item.title}\r\n                </h3>\r\n\r\n            </a>\r\n\r\n\r\n            <p className=\"searchPage__resultSnippet\">\r\n                {item.snippet}\r\n            </p>\r\n\r\n\r\n           \r\n                \r\n          \r\n        </div>\r\n    ))}\r\n</div>\r\n\r\n)}\r\n    </div> \r\n\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './homepage/Home';\nimport SearchPage from './searchPages/SearchPage';\n\nfunction App(){\n  return(\n\n      <div className=\"app\">\n          <Router>\n              <Switch>\n                  <Route path='/search'>\n                    <SearchPage />\n                  </Route>\n\n                  <Route path='/'>\n                      <Home/>\n                  </Route>\n              </Switch>\n          </Router>\n      </div>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {StateProvider} from './searchPages/StateProvider';\nimport reducer,{initialState} from './reducer';\nReactDOM.render(\n\n\n  \n  <Router>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      \n    <App />\n    </StateProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}